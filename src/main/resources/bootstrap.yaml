server:
  port: 8888
spring:
  application:
    name: chatgpt-fast
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${MYSQL_USER_NAME:root}
    password: ${MYSQL_PASSWORD:root}
    url: ${JDBC_URL:jdbc:mysql://127.0.01:3306/aigcfast?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true}
  # redis配置
  data:
    redis:
      # Redis服务器地址
      host: 127.0.01
      # Redis服务器连接端口
      port: 6379
      # Redis服务器连接密码（默认为空）
      password:
      # 连接超时时间
      timeout: 10s
      lettuce:
        pool:
          # 连接池最大连接数
          max-active: 1000
          # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-wait: -1ms
          # 连接池中的最大空闲连接
          max-idle: 10
          # 连接池中的最小空闲连接
          min-idle: 0
mybatis-plus:
  configuration:
    # 控制台打印 SQL
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl

# 邮箱验证相关-关闭则不需要配置
email:
  # SMTP服务器地址
  host: ${EMAIL_HOST:}
  # 服务器一般默认 25 端口,ssl为465
  port: ${EMAIL_PORT:}
  # 发件人前缀
  from: ${EMAIL_FROM:}
  # 用户名
  user: ${EMAIL_USER:}
  # 如果要授权码，这里就是传授权码
  pass: ${EMAIL_PASS:}

sa-token:
  # 前端用户登录，用于加密 JWT
  jwt-secret-key: ${JWT_SECRET:chatgpt}
  # JWT 有效期
  timeout: ${LOGIN_TIMEOUT_SECONDS:2592000}
  token-name: chatgpt-token
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: true

chat:
  # OpenAI API Base URL - https://api.openai.com/，要加/后缀
  openai_api_url: ${CHAT_OPENAI_API_URL:http://openai.aigcfast.com/}
  # HTTP 代理
  http_proxy_host: ${CHAT_HTTP_PROXY_HOST:}
  # HTTP 代理
  http_proxy_port: ${CHAT_HTTP_PROXY_PORT:}
  # access token代理地址
  token_proxy_url: ${CHAT_TOKEN_PROXY_URL:}
  # 超时毫秒
  timeout: ${CHAT_TIMEOUT:180000}
  apiOnly: true

# knife4j配置
knife4j:
  openapi:
    title: chatgpt-fast接口文档
    description: chatgpt-fast接口文档
    email: 563795085@qq.com
    concat: chatgpt-fast
    version: v1.0.0
    group:
      chatgpt-fast:
        group-name: chatgpt-fast
        api-rule: package
        api-rule-resources:
          - com.aigcfast.chat.controller
    language: zh_cn
  #生产需要关闭
  enable: true
task:
  pool:
    # 核心线程数
    corePoolSize: 2
    # 最大线程数
    maxPoolSize: 2
    # 线程存活时长，单位秒
    keepAliveTime: 30
    # 队列长度
    queueCapacity: 1000
